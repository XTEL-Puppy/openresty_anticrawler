worker_processes auto;

error_log  logs/error.log info;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/html;


    sendfile        on;

    keepalive_timeout  65;

    lua_shared_dict config_cache 10m;  # 缓存共享内存
    lua_shared_dict my_limit_req_store 10m;
    lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";
    init_by_lua_block {
        require "resty.core"
        collectgarbage("collect")  -- 在 Nginx 启动时清理 Lua 内存
    }
    init_worker_by_lua_block {
    	require("config_loader").start_watch()
        require("handlers.usr_bwList").start_cleanup_timer()
        require("handlers.js_challenge").rnd_seed()

        collectgarbage("collect")  -- 在 worker 初始化后再清理一次
    }	

    server {
        listen       8080;

        location / {

	    access_by_lua_file lua/anti_crawler.lua;
	    log_by_lua_file lua/conn_log.lua;
	    proxy_pass http://192.168.52.130:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /captcha {
            content_by_lua_file lua/handlers/captcha_handle.lua;
        }

        location /verify_captcha {
            content_by_lua_file lua/handlers/captcha_verify.lua;
        }


        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}

